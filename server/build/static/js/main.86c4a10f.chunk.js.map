{"version":3,"sources":["components/authentication/LogoutConfirmation.js","components/authentication/LoggingOut.js","components/general/Submitting.js","components/errors/ValidationError.js","components/general/ErrorMsg.js","components/ModalController.js","components/Confirmation.js","components/authentication/Login.js","components/ServerError.js","components/Nav.js","components/general/SectionHeader.js","components/general/SubsectionHeader.js","components/BasicInfo/MachineSelectBox.js","components/BasicInfo/MachineSelect.js","components/reservation/cards/Scheduled.js","components/reservation/cards/Starting.js","components/reservation/cards/Started.js","components/reservation/cards/UhOh.js","components/reservation/cards/SystemError.js","components/reservation/ReservationCard.js","components/reservation/ReservationView.js","components/BasicInfo/BasicInfo.js","components/TimeSelect/TimeSelectBox.js","components/TimeSelect/TimeSelect.js","components/general/SubmitButton.js","components/DateSelect/DateSelectBox.js","components/DateSelect/DateSelect.js","components/MainContent.js","App.js","serviceWorker.js","index.js"],"names":["LogoutConfirmation","Modal","onHide","this","props","closeModal","show","Header","closeButton","Title","Body","Footer","Button","onClick","handleLogout","variant","React","Component","LoggingOut","href","Loading","backdrop","ValidationError","ErrorMsg","modalText","ModalController","modal","Submitting","changeModal","Confirmation","style","padding","borderBottom","fontWeight","fontSize","marginTop","className","role","route","to","redirect","Login","handleLoginFieldEdit","ev","target","name","setState","password","value","email","handleLogin","preventDefault","isLoading","axios","method","url","data","state","then","res","catch","err","response","status","passwordIncorrect","Alert","display","disabled","onChange","type","placeholder","block","pointerEvents","ServerError","charSet","content","rel","backgroundColor","borderRadius","color","Nav","Navbar","expand","id","Container","Brand","Toggle","data-toggle","data-target","aria-controls","aria-expanded","aria-label","Collapse","logoutClicked","verticalAlign","SectionHeader","children","SubsectionHeader","MachineSelectBox","selectedMachine","machine","_id","border","handleMachineChange","MachineSelect","getData","get","machines","map","prevProps","isLoggedIn","key","Scheduled","textDecoration","moment","reservation","start","fromNow","format","end","Starting","currentTime","valueOf","interval","displayTime","start_expires","setInterval","newTime","startedNoUserConf","clearInterval","markStarted","Started","UhOh","blocks","length","SystemError","ReservationCard","setLoading","ReservationView","val","loading","handle401","handle500","Spinner","animation","BasicInfo","Row","Col","md","handleChange","justificaton","defaultValue","TimeSelectBox","selectedBlocks","includes","index","handleBlocksChange","height","TimeSelect","signal","CancelToken","source","displayBlocks","formData","date","params","cancelToken","token","console","log","message","cancel","SubmitButton","handleSubmit","marginLeft","DateSelectBox","selectedDate","day","raw","handleDateChange","DateSelect","days","MainContent","justification","bind","description","i","shift","splice","upperBound","lowerBound","push","sort","a","b","pathname","App","newModal","text","CookiesProvider","path","render","getReservationConfirmation","cookies","withCookies","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.86c4a10f.chunk.js","sourcesContent":["import React from \"react\"\nimport {Button, Modal} from \"react-bootstrap\"\n\nclass LogoutConfirmation extends React.Component {\n    render() {\n        return (<Modal onHide={this.props.closeModal} show={this.props.show}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Confirmation Needed</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>Are you sure you want to log out?</Modal.Body>\n                <Modal.Footer>\n                    <Button onClick={this.props.handleLogout} variant=\"danger\">\n                        Yes\n                    </Button>\n                    <Button onClick={this.props.closeModal} variant=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button variant=\"secondary\">\n                        Get Help\n                    </Button>\n                </Modal.Footer>\n            </Modal>)\n    }\n}\n\nexport default LogoutConfirmation","import React from \"react\"\nimport {Modal, Button} from \"react-bootstrap\"\n\nclass LoggingOut extends React.Component {\n    render() {\n        return (<div>\n            <Modal onHide={this.props.closeModal} show={this.props.show}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Logging you out</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>Please wait. If nothing happens, <a href=\"#\">get help</a>.</Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"primary\">\n                        Get Help\n                    </Button>\n                </Modal.Footer>\n            </Modal></div>)\n    }\n}\n\nexport default LoggingOut","import React from 'react';\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\n\nclass Loading extends React.Component {\n    render() {\n        return (<div>\n            <Modal show={this.props.show} backdrop=\"static\">\n                <Modal.Header closeButton>\n                    <Modal.Title>Processing</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>Please wait. If nothing happens, <a href=\"#\">get help</a>.</Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"primary\">\n                        Get Help\n                    </Button>\n                </Modal.Footer>\n            </Modal></div>)\n    }\n}\n\nexport default Loading","import React from 'react';\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\n\nclass ValidationError extends React.Component {\n    render() {\n        return (<div>\n            <Modal onHide={this.props.closeModal} show={this.props.show}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Validation Error</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>One or more of the fields were incorrectly filled out. Please review your entries and try again</Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\">\n                        Help\n                    </Button>\n                    <Button onClick={this.props.closeModal} variant=\"primary\">\n                        Okay\n                    </Button>\n                </Modal.Footer>\n            </Modal></div>)\n    }\n}\n\nexport default ValidationError","import React from 'react';\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\n\nclass ErrorMsg extends React.Component {\n    render() {\n        return (<div>\n            <Modal onHide={this.props.closeModal} show={this.props.show}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Error</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>{this.props.modalText}</Modal.Body>\n                <Modal.Footer>\n                    <Button onClick={this.props.closeModal} variant=\"primary\">\n                        Close\n                    </Button>\n                    <Button variant=\"secondary\">\n                        Get Help\n                    </Button>\n                </Modal.Footer>\n            </Modal></div>)\n    }\n}\n\nexport default ErrorMsg","import React from \"react\"\nimport LogoutConfirmation from \"./authentication/LogoutConfirmation\"\nimport LoggingOut from \"./authentication/LoggingOut\"\nimport Submitting from \"./general/Submitting\"\nimport ValidationError from \"./errors/ValidationError\"\nimport ErrorMsg from \"./general/ErrorMsg\"\n\nclass ModalController extends React.Component {\n    render() {\n        return(<div>\n            <ErrorMsg closeModal={this.props.closeModal} show={this.props.modal == \"ErrorMsg\"} modalText={this.props.modalText} />\n            <ValidationError closeModal={this.props.closeModal} show={this.props.modal == \"ValidationError\"} />\n            <Submitting show={this.props.modal == \"Submitting\"} />\n            <LogoutConfirmation handleLogout={this.props.handleLogout} changeModal={this.props.changeModal} closeModal={this.props.closeModal} show={this.props.modal == \"LogoutConfirmation\"} />\n            <LoggingOut changeModal={this.props.changeModal} closeModal={this.props.closeModal} show={this.props.modal == \"LoggingOut\"} />\n        </div>)\n    }\n}\n\nexport default ModalController","import React from \"react\";\nimport {Button} from \"react-bootstrap\"\nimport {Redirect} from \"react-router-dom\"\n\nclass Confirmation extends React.Component {\n    render() {\n        return (<section style={{ padding: '10px' }}><span style={{ borderBottom: '1px solid black', fontWeight: 'bold', fontSize: '30px' }}>Create a new Reservation</span>\n            <div style={{ marginTop: '10px' }}>\n                <div className=\"alert alert-success\" role=\"alert\"><span style={{ fontSize: '21px' }}><strong>Thank you! Your Reservation has been confirmed.</strong></span>\n                    \n                    <div>\n                        <p>You may now safely return to the home page. Your reservation will be visible to you if ever you need to review it or make changes to it.</p>\n                        <Button variant=\"success\" onClick={() => {this.props.route(\"/\")}}>Return to Home Page</Button>\n                        <Redirect to={this.props.redirect} />\n                    </div>\n                </div>\n                {/* Below is Reserved for Future Use*/}\n                {/* <div className=\"row\">\n                    <div className=\"col-md-4\">\n                        <div className=\"row\">\n                            <div className=\"col\"><span style={{ fontWeight: 'bold' }}>Machine Name</span><span /></div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col\"><span>Machine type</span>\n                                <div className=\"row\">\n                                    <div className=\"col\"><span>Date</span></div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col\"><span>Time Block Interval</span></div>\n                        </div>\n                    </div>\n                    <div className=\"col-md-4\"><span><strong>Extra Notes: </strong>Your administrator has not specified anything.</span></div>\n                    <div className=\"col-md-4\">\n                        <p>Lower Canada College<br />4090 Avenue Royal<br />Montreal, Quebec<br />H4A 2M5<br />Should you have any questions or concerns, please&nbsp;<span style={{ textDecoration: 'underline' }}>contact us.</span></p>\n                    </div>\n                </div> */}\n            </div>\n        </section>)\n    }\n}\n\nexport default Confirmation","import React from \"react\"\nimport \"../../css/Login-Form-Clean.css\"\nimport axios from \"axios\"\nimport {Link, Redirect, useLocation} from \"react-router-dom\"\nimport {Alert, Button} from \"react-bootstrap\"\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoading: false,\n            email: \"\",\n            password: \"\",\n            passwordIncorrect: false,\n        }\n    }\n    handleLoginFieldEdit = ev => {\n        if (ev.target.name == \"email\") {\n            this.setState({\n                email: ev.target.value\n            });\n            return;\n        }\n        if (ev.target.name == \"password\") {\n            this.setState({\n                password: ev.target.value\n            })\n        }\n    }\n    handleLogin = ev => {\n        // No need to bind anything as arrow uses global 'this'\n        // data should have email + password\n        // Remove the login thingy\n        ev.preventDefault();\n        this.setState({\n            isLoading: true\n        });\n        // Get the auth token\n        axios({\n            method: 'post',\n            url: \"/auth/login\",\n            data: {\n                email: this.state.email,\n                password: this.state.password\n            }\n        }).then(res => {\n            // Login was successful\n            this.props.route('/');\n        }).catch(err => {\n            // Login was not successful\n            this.setState({\n                isLoading: false\n            });\n            if (err.response.status == 401) {\n                // The password is incorrect\n                return this.setState({\n                    passwordIncorrect: true\n                })\n            }\n            this.props.changeModal(\"ErrorMsg\",\"An unknown error occured.\")\n        })\n    }\n    render() {\n        return (<div className=\"login-clean\">\n            <Redirect to={this.props.redirect}/>\n            <form method=\"post\">\n                <h2 className=\"sr-only\">Login Form</h2>\n                <div className=\"illustration\"><span className=\"text-center\" style={{ fontSize: '40px' }}>Autofab 3.0</span></div>\n                <Alert style={this.state.passwordIncorrect ? { display: \"block\" } : { display: \"none\" }} variant=\"danger\">Your username or password is incorrect. Please <Link to=\"#\">reset your password</Link> if this is a mistake.</Alert>\n                <div className=\"form-group\"><input disabled={this.state.isLoading} value={this.state.email} onChange={this.handleLoginFieldEdit} className=\"form-control\" type=\"email\" name=\"email\" placeholder=\"Email\" /></div>\n                <div className=\"form-group\"><input disabled={this.state.isLoading} value={this.state.password} onChange={this.handleLoginFieldEdit} className=\"form-control\" type=\"password\" name=\"password\" placeholder=\"Password\" /></div>\n                <div className=\"form-group\">\n                    <Button disabled={this.state.isLoading} onClick={this.handleLogin} variant=\"primary\" block type=\"submit\">{this.state.isLoading ? \"Logging you in...\" : \"Log In\"}</Button>\n                    <Link style={this.state.isLoading ? { pointerEvents: 'none' } : {}} to=\"#\" className=\"btn btn-primary btn-block\" type=\"submit\">How do I get an Account?</Link>\n                </div>\n                <Link style={this.state.isLoading ? { pointerEvents: 'none' } : {}} to=\"#\" className=\"forgot\" href=\"#\">Forgot your email or password?</Link><br />\n                <Link style={this.state.isLoading ? { pointerEvents: 'none' } : {}} to=\"#\" className=\"forgot\" href=\"#\">Login Help</Link>\n            </form>\n        </div>)\n    }\n}\n\nexport default Login","import React from \"react\"\nimport {Redirect} from \"react-router-dom\"\n\nclass ServerError extends React.Component {\n    render() {\n        return (\n            <div>\n                <meta charSet=\"utf-8\" />\n                <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, shrink-to-fit=no\" />\n                <title>server error</title>\n                <link rel=\"stylesheet\" href=\"assets/bootstrap/css/bootstrap.min.css\" />\n                <link rel=\"stylesheet\" href=\"assets/fonts/font-awesome.min.css\" />\n                <link rel=\"stylesheet\" href=\"assets/css/styles.css\" />\n                <div className=\"jumbotron\" style={{ backgroundColor: 'rgb(133,27,25)', borderRadius: 0 }}>\n                    <h1 style={{ color: 'white' }}><i className=\"fa fa-times p-4\" />You had one Job!</h1>\n                    <p style={{ color: 'white' }}>We we know –– sorry! Whatever you were doing that got you to this page probably didn't work. If the issue persists, please contact your administrator to inform them as soon as possible.</p>\n                </div>\n                <Redirect to={this.props.redirect}/>\n            </div>)\n    }\n}\n\nexport default ServerError","import React from \"react\";\nimport Navbar from \"react-bootstrap/Navbar\"\nimport Container from \"react-bootstrap/Container\"\n\nclass Nav extends React.Component {\n    render() {\n        return (\n            <Navbar variant=\"light\" expand=\"lg\" className=\"text-uppercase\" id=\"mainNav\" style={{ backgroundColor: '#d00017' }}>\n                <Container><Navbar.Brand>Autofab 3.0</Navbar.Brand><Navbar.Toggle data-toggle=\"collapse\" data-target=\"#navbarResponsive\" className=\"text-white navbar-toggler-right text-uppercase text-white rounded\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"><i className=\"fa fa-bars\" /></Navbar.Toggle>\n                    <Navbar.Collapse className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n                        <div className=\"ml-auto\">\n                            <Container>\n                                <div className=\"row\">\n                                    <div className=\"col text-center\"><span className=\"text-center\" style={{ color: 'rgb(255,255,255)', fontSize: '28px' }}>ADMIN</span></div>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col text-center\"><span onClick={this.props.logoutClicked} style={{ color: 'rgb(255,255,255)' }}>Log Out</span></div>\n                                    <div className=\"col text-center my-auto\" style={{ verticalAlign: 'middle' }}><span style={{ color: 'rgb(255,255,255)' }}>Admin Panel</span></div>\n                                </div>\n                            </Container>\n                        </div>\n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n        )\n    }\n}\n\nexport default Nav","import React from \"react\"\n\nclass SectionHeader extends React.Component {\n    render() {\n        return (\n            <h1 className=\"section-header\">{this.props.children}</h1>\n        )\n    }\n}\n\nexport default SectionHeader","import React from \"react\"\n\nclass SubsectionHeader extends React.Component {\n    render() {\n        return (\n        <h2 className=\"field-header\" style={{ fontSize: '22px', color: 'rgb(91,95,99)' }}>{this.props.children}</h2>\n        )\n    }\n}\nexport default SubsectionHeader","import React from \"react\"\n\nclass MachineSelectBox extends React.Component {\n    render() {\n        return (\n            <div style={this.props.selectedMachine === this.props.machine._id ? {border: \"1px solid black\"} : {}} onClick={() => {this.props.handleMachineChange(this.props.machine._id)}} className=\"selection-box\">\n                <span className=\"selection-box-text\">{this.props.machine.name}</span>\n            </div>\n        )\n    }\n}\n\nexport default MachineSelectBox;","import React from \"react\"\nimport MachineSelectBox from \"./MachineSelectBox\"\nimport axios from \"axios\";\n\nclass MachineSelect extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            machines: [] // Array of all machines\n        }\n    }\n    getData = () => {\n        axios.get(\"/hardware/machines/view\")\n            .then(res => {\n                this.setState({\n                    machines: res.data\n                })\n                this.state.machines.map(machine => {\n                    return (<MachineSelectBox machine={machine} />)\n                })\n            })\n    }\n    componentDidMount() {\n        this.getData();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.isLoggedIn != this.props.isLoggedIn) {\n            this.getData();\n        }\n    }\n    render() {\n        return (<div className=\"selection-box-container\">\n                {this.state.machines.map(machine => {\n                    return <MachineSelectBox selectedMachine={this.props.selectedMachine} handleMachineChange={this.props.handleMachineChange} key={machine._id} machine={machine} />\n                })}\n        </div>)\n    }\n}\n\nexport default MachineSelect","import React from \"react\"\nimport moment from \"moment\"\n\nclass Scheduled extends React.Component {\n    render() {\n        return (\n            /**\n             * The scheduled class is for testing purposes.\n             */\n            <div className=\"scheduled\">\n                <div className=\"card red-border\">\n                    <div className=\"card-body\">\n                        <h4 className=\"card-title\" style={{ fontWeight: 'bold' }}>Next Up!</h4>\n                        <h6 className=\"text-muted card-subtitle mb-2 red-text\">This is the next reservation scheduled to take place. Not sure how this works? Consult the help documentation.</h6>\n                        <div className=\"row\">\n                            <div className=\"col d-flex justify-content-center\"><span className=\"p-2 align-self-center text-center\" style={{ textDecoration: 'underline' }}>{moment(this.props.reservation.start, \"x\").fromNow()}</span></div>\n                            <div className=\"col d-flex justify-content-center\" style={{ verticalAlign: 'middle' }}><span className=\"p-2 align-self-center text-center\" style={{ textDecoration: 'underline' }}>{this.props.reservation.machine.name} ({this.props.reservation.machine.type.name})</span></div>\n                            <div className=\"col p-2 d-flex justify-content-center\"><span className=\"p-2 align-self-center text-center\" style={{ textDecoration: 'underline' }}>{moment(this.props.reservation.start, \"x\").format(\"hh:mm A\")} to {moment(this.props.reservation.end, \"x\").format(\"hh:mm A\")}</span></div>\n                        </div>\n                        <div className=\"d-flex flex-column\" style={{ marginTop: '10px' }}>\n                            <div className=\"p-2\"><span className=\"text-center red-fill p-2\" style={{ display: 'block', fontWeight: 'bold' }}>Edit</span></div>\n                            <div className=\"p-2\"><span className=\"text-center red-fill p-2\" style={{ display: 'block', fontWeight: 'bold' }}>Cancel</span></div>\n                            <div />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"d-flex justify-content-center\" style={{ marginTop: '10px' }}>\n                    <div className=\"d-flex flex-column p-2\" style={{ display: 'block', fontWeight: 'bold' }}>\n                        <div><span>But wait, there's more!</span></div>\n                        <div className=\"d-flex justify-content-center\"><button className=\"btn btn-primary btn-danger\" type=\"button\">See All</button></div>\n                    </div>\n                </div>\n            </div>)\n    }\n}\n\nexport default Scheduled","import React from \"react\"\nimport moment from \"moment\"\n\nclass Starting extends React.Component {\n    constructor(props) {\n        super(props)\n        let currentTime = moment().valueOf();\n        this.state = {\n            interval: null,\n            displayTime: this.props.reservation.start_expires - currentTime\n        }\n    }\n    componentDidMount() {\n        /**\n         * Displays the countdown timer. Most of the\n         * state in this app is for use with the countdown\n         * timer.\n         */\n        let interval = setInterval(() => {\n            let currentTime = moment().valueOf();\n            let newTime = this.props.reservation.start_expires - currentTime\n            this.setState({\n                displayTime: newTime\n            });\n            if (newTime <= 0) {\n                /**\n                 * The time has expired. The reservation should be marked as never started.\n                 */\n                this.props.startedNoUserConf();\n            }\n        },1000);\n        this.setState({\n            interval: interval\n        });\n    }\n    componentWillUnmount() {\n        clearInterval(this.state.interval);\n    }\n    render() {\n        return (\n            /**\n             * Starting is there for\n             * testing purposes.\n             */\n            <div className=\"starting card green-fill\">\n                <div className=\"card-body\">\n                    <h4 className=\"card-title white-text\" style={{ fontWeight: 'bold' }}>Your turn!</h4>\n                    <h6 className=\"text-muted card-subtitle mb-2 white-text\">A resevation you have scheduled is starting right now! Please mark it as started so we know you're there!</h6>\n                    <div className=\"d-flex justify-content-center\"><span className=\"p-2\" style={{fontSize: \"20px\",color: \"rgb(208, 0, 23)\",backgroundColor: \"white\"}}><i className=\"fa fa-warning p-2\"></i>Warning: You have {moment(this.state.displayTime, 'x').format(\"HH:mm:ss\")} until your reservation is automatically cancelled!</span></div>\n                    <div className=\"row\">\n        <div className=\"col d-flex justify-content-center\" style={{ verticalAlign: 'middle' }}><span className=\"p-2 align-self-center text-center white-text\" style={{ textDecoration: 'underline' }}>{this.props.reservation.machine.name} ({this.props.reservation.machine.type.name})</span></div>\n                        <div className=\"col p-2 d-flex justify-content-center\"><span className=\"p-2 align-self-center text-center white-text\" style={{ textDecoration: 'underline' }}>{moment(this.props.reservation.start, 'x').format(\"hh:mm A\")} to {moment(this.props.reservation.end, 'x').format(\"hh:mm A\")}</span></div>\n                    </div>\n                    <div className=\"d-flex flex-column\" style={{ marginTop: '10px' }}>\n                        <div onClick={this.props.markStarted} className=\"p-2\"><span className=\"text-center p-2 green-button\" style={{ display: 'block', fontWeight: 'bold' }}>Start</span></div>\n                        <div className=\"p-2\"><span className=\"text-center p-2 white-button\" style={{ display: 'block', fontWeight: 'bold' }}>Cancel</span></div>\n                        <div />\n                    </div>\n                </div>\n            </div>)\n    }\n}\n\nexport default Starting","import React from \"react\"\n\nclass Started extends React.Component {\n    render() {\n        return (<div className=\"card green-fill\">\n            <div className=\"card-body\">\n                <h4 className=\"card-title white-text\" style={{ fontWeight: 'bold' }}>Your turn!</h4>\n                <h6 className=\"text-muted card-subtitle mb-2 white-text\">A resevation you have scheduled is starting right now! Please mark it as started so we know you're there!</h6>\n                <div className=\"row\">\n                    <div className=\"col d-flex justify-content-center\" style={{ verticalAlign: 'middle' }}><span className=\"p-2 align-self-center text-center white-text\" style={{ textDecoration: 'underline' }}>Laser Cutter</span></div>\n                    <div className=\"col p-2 d-flex justify-content-center\"><span className=\"p-2 align-self-center text-center white-text\" style={{ textDecoration: 'underline' }}>8:00 AM to 9:00 AM</span></div>\n                </div>\n                <div className=\"d-flex flex-column\" style={{ marginTop: '10px' }}>\n                    <div className=\"p-2\"><span className=\"text-center red-fill p-2 green-button\" style={{ display: 'block', fontWeight: 'bold' }}>Start</span></div>\n                    <div className=\"p-2\"><span className=\"text-center red-fill p-2 white-button\" style={{ display: 'block', fontWeight: 'bold' }}>Cancel</span></div>\n                    <div />\n                </div>\n            </div>\n        </div>)\n    }\n}\n\nexport default Started","import React from \"react\"\n\nclass UhOh extends React.Component {\n    render() {\n        return (<div className=\"card red-fill\">\n            <div className=\"card-body\">\n                <h4 className=\"card-title\" style={{ fontWeight: 'bold' }}><i className=\"fa fa-exclamation-circle p-2\" />Uh-Oh!</h4>\n                <h6 className=\"text-muted card-subtitle white-text p-2\" style={{ fontSize: '20px' }}>You did not mark your reservation as started. As a result, it was cancelled, and your spot may or may not have been given to another student.</h6>\n    <div className=\"white-fill\"><span className=\"red-text\"><i className=\"fa fa-minus p-2\" />You have been given <strong>{this.props.reservation.blocks.length}</strong> {this.props.reservation.blocks.length == 1 ? \"strike\" : \"strikes\"} for this incident</span></div>\n                <div className=\"row p-2\">\n                    <div className=\"col d-flex justify-content-center\"><span className=\"p-2 align-self-center text-center\" style={{ textDecoration: 'line-through' }}>March 7th 2020</span></div>\n                    <div className=\"col d-flex justify-content-center\" style={{ verticalAlign: 'middle' }}><span className=\"p-2 align-self-center text-center\" style={{ textDecoration: 'line-through' }}>Laser Cutter</span></div>\n                    <div className=\"col p-2 d-flex justify-content-center\"><span className=\"p-2 align-self-center text-center\" style={{ textDecoration: 'line-through' }}>8:00 AM to 9:00 AM</span></div>\n                </div>\n                <div className=\"d-flex flex-column\" style={{ marginTop: '10px' }}>\n                    <div />\n                </div><span>If you believe this was a mistake, please contact your administrator as soon as possible. Please note that too many strikes may result in account suspension.</span></div>\n        </div>)\n    }\n}\n\nexport default UhOh","import React from \"react\"\nimport moment from \"moment\"\n\nclass SystemError extends React.Component {\n    render() {\n        /**\n         * The class name 'systemerror'\n         * is there for testing reasons.\n         */\n        return (<div className=\"systemerror\">\n            <div className=\"card orange-fill\">\n                <div className=\"card-body\">\n                    <h4 className=\"card-title white-text\" style={{ fontWeight: 'bold' }}><i className=\"fa fa-times p-2\" />You're not supposed to be seeing this...</h4>\n                    <h6 className=\"text-muted card-subtitle white-text p-2\" style={{ fontSize: '20px' }}>The reservation system is currently experiencing difficulties with the reservation shown below. Please report this error so we can take a look and inform your administrator as soon as pssible to avoid any problems.</h6>\n                    <div className=\"white-fill\" />\n                    <div className=\"row p-2\">\n                        <div className=\"col d-flex justify-content-center\"><span className=\"p-2 align-self-center text-center text-white\"><i className=\"fa fa-warning p-2\" />{moment(this.props.reservation.start, 'x').format(\"dddd MMM Do yyyy\")}</span></div>\n                        <div className=\"col d-flex justify-content-center\" style={{ verticalAlign: 'middle' }}><span className=\"p-2 align-self-center text-center text-white\"><i className=\"fa fa-warning p-2\" />Laser Cutter</span></div>\n                        <div className=\"col p-2 d-flex justify-content-center\"><span className=\"p-2 align-self-center text-center text-white\"><i className=\"fa fa-warning p-2\" />8:00 AM to 9:00 AM</span></div>\n                    </div>\n                </div>\n            </div>\n        </div>)\n    }\n}\n\nexport default SystemError;","import React from \"react\"\nimport Scheduled from \"./cards/Scheduled\"\nimport Starting from \"./cards/Starting\"\nimport Started from \"./cards/Started\"\nimport UhOh from \"./cards/UhOh\"\nimport SystemError from \"./cards/SystemError\"\nimport moment from \"moment\"\nimport axios from \"axios\"\n\nclass ReservationCard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            status: null\n        }\n    }\n    markStarted = () => {\n        this.props.setLoading(true);\n        axios({\n            url: \"/res/mark/started\",\n            method: \"post\"\n        }).then(res => {\n            /**\n             * The reservation has successfully been marked as started and is now\n             * taking place. A new card should be shone to convey this.\n             */\n            this.props.setLoading(false);\n            this.setState({\n                status: 1\n            });\n        }).catch(err => {\n            this.props.setLoading(false);\n            this .props.changeModal(\"ErrorMsg\",\"An unexpected error occured\")\n        })\n    }\n    startedNoUserConf = () => {\n        this.setState({\n            status: 6 // Reservation marked as stated without user confirmation\n        })\n    }\n    render() {\n        let currentTime = moment().valueOf();\n        // currentTime = 1597752000000;\n        // this.props.reservation.start_expires = 1597771800000;\n        /**\n         * Important note: If the reservation has been set to started, the idea\n         * is that the client does not call the server again to get the reservation\n         * if it gets a good response. Instead, it checks its state to see\n         * if it is started. If the reservation that was obtained from the server\n         * also has a status of 1, it will do the same –– it renders the\n         * started card. Note that if the client manually changes the state\n         * to 1, this will not alter the server's understanding of the\n         * state of the reservation.\n         */\n        if (this.props.reservation.status == 1 || this.state.status == 1) {\n            /**\n             * The reservaton was marked as started by the user.\n             */\n            return <Started reservation={this.props.reservation}/>\n        }\n        if (this.props.reservation.start <= currentTime && this.props.reservation.start_expires >= currentTime) {\n            /**\n             * The reservation is started and the user should confirm this ASAP\n             */\n            return <Starting startedNoUserConf={this.startedNoUserConf} reservation={this.props.reservation}/>\n        }\n        if (this.props.reservation.status == 0 && this.props.reservation.start > currentTime && this.props.reservation.start_expires > currentTime) {\n            /**\n            * The reservation has been scheduled and has yet to start\n            */\n            return <Scheduled reservation={this.props.reservation} />\n        }\n        if (this.props.reservation.status == 6 || this.state.status == 6) {\n            /**\n             * A code 6 means that the user has not marked their reservation as\n             * started. It is to inform them that it has been cancelled.\n             */\n            return <UhOh reservation={this.props.reservation} />\n        }\n        /**\n         * If none of the above checks have been triggered, a warning menu should appear\n         * to let the user know that their reservation has been \n         */\n        return <SystemError reservation={this.props.reservation}/>\n    }\n}\n\nexport default ReservationCard","import React from \"react\"\nimport ReservationCard from \"./ReservationCard\"\nimport axios from \"axios\"\nimport {Spinner} from \"react-bootstrap\"\n\nclass ReservationView extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            reservation: null,\n            loading: true\n        }\n    }\n    componentDidMount() {\n        // Retrieve the next reservation\n        axios({\n            url: \"/res/view/next\",\n            method: \"get\"\n        }).then(res => {\n            this.setState({\n                reservation: res.data,\n                loading: false\n            })\n        }).catch(err => {\n            this.setState({\n                loading: false\n            })\n            if (err.response && err.response.status == 401) {\n                return this.props.handle401(); // Unauthorized\n            }\n            if (err.response && err.response.status == 400) return; // No reservatons\n            this.props.handle500();\n        })\n    }\n    setLoading = (val) => {\n        this.setState({\n            loading: val\n        });\n    }\n    render() {\n        return (<div>\n            <h1>My Reservations</h1>\n            {this.state.loading ? <div className=\"d-flex justify-content-center\"><Spinner animation=\"border\" role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n            </Spinner></div> : this.state.reservation ? <ReservationCard setLoading={this.setLoading} changeModal={this.props.changeModal} reservation={this.state.reservation} /> : <p>You have no reservations in your name. Make a new reservation to get started! Not sure how? Check the help documentation..</p>}\n        </div>\n)\n    }\n}\n\nexport default ReservationView","import React from \"react\";\nimport Row from \"react-bootstrap/Row\"\nimport Col from \"react-bootstrap/Col\"\nimport Container from \"react-bootstrap/Container\"\n// import DatePicker from \"react-datepicker\"\nimport SectionHeader from \"../general/SectionHeader\"\nimport SubsectionHeader from \"../general/SubsectionHeader\"\nimport MachineSelect from \"./MachineSelect\";\nimport ReservationView from \"../reservation/ReservationView\"\n\nclass BasicInfo extends React.Component {\n    render() {\n        return (\n            <div style={{ marginTop: '20px' }}>\n                <Container>\n                    <Row>\n                        <Col md={6}>\n                            <SectionHeader>Reserve</SectionHeader>\n                            <SubsectionHeader>Why?</SubsectionHeader>\n                            <textarea onChange={this.props.handleChange} value={this.props.justificaton} defaultValue={\"\"} />\n                            <SubsectionHeader>Choose a Machine</SubsectionHeader>\n                            <MachineSelect isLoggedIn={this.props.isLoggedIn} selectedMachine={this.props.selectedMachine} handleMachineChange={this.props.handleMachineChange} />\n                        </Col>\n                        <Col md={6}>\n                            <ReservationView handle500={this.props.handle500} handle401={this.props.handle401} changeModal={this.props.changeModal} />\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        )\n    }\n}\n\nexport default BasicInfo;","import React from \"react\"\nimport moment from \"moment\"\n\nclass TimeSelectBox extends React.Component {\n    render() {\n        return (\n            <div style={this.props.selectedBlocks.includes(this.props.index) || this.props.selectedBlocks.length == 0 ? {border: \"1px solid black\"} : {border: \"1px dotted black\"}} onClick={() => {this.props.handleBlocksChange(this.props.index)}} className=\"selection-box time-selection\"><span className=\"text-center selection-box-text\" style={{ height: \"auto\" }}>{moment(this.props.display.start, \"x\").format(\"hh:mm A\")} to {moment(this.props.display.end, \"x\").format(\"hh:mm A\")}</span></div>\n        );\n    }\n}\n\nexport default TimeSelectBox;","import React from \"react\"\nimport moment from \"moment\"\n\nimport Col from \"react-bootstrap/Col\"\nimport Row from \"react-bootstrap/Row\"\nimport Container from \"react-bootstrap/Container\"\nimport axios from \"axios\"\n\nimport TimeSelectBox from \"./TimeSelectBox\"\nimport SubsectionHeader from \"../general/SubsectionHeader\"\n\nclass TimeSelect extends React.Component {\n    signal = axios.CancelToken.source();\n    constructor(props) {\n        super(props);\n        this.state = {\n            displayBlocks: []\n        }\n    }\n    /* This checks to see if\n     * a) A machine was picked or\n     * b) If the user is now logged in\n     */\n    componentDidUpdate(prevProps) {\n        if ((this.props.formData.machine != null && this.props.formData.date != null && this.props.formData !== prevProps.formData) || prevProps.isLoggedIn != this.props.isLoggedIn) {\n            axios.get(\"/blocks/view\", {\n                params: {\n                    machine: this.props.formData.machine,\n                    date: this.props.formData.date\n                },\n                cancelToken: this.signal.token\n            }).then(res => {\n                console.log(\"Reloading!\", res)\n                this.setState({\n                    displayBlocks: res.data\n                })\n            }).catch(err => {\n                /**\n                 * Important: err.response.status will be undefined\n                 * if the promise is rejected, which happens when the\n                 * component is unmounted. error.response.status will be\n                 * 499 if the request has been cancelled.\n                 */\n                if (err.message == 499) {\n                    return;\n                }\n                if (err.response.status == 401) {\n                    this.props.handle401();\n                }\n            })\n        }\n    }\n    /**\n     * The componentWillUnmount\n     * is meant to cancel any API calls when\n     * an object unmounts. This is very important,\n     * else there will be a memory leak; a request\n     * is being made, but the result is left unused.\n     */\n    componentWillUnmount() {\n        this.signal.cancel(499);\n    }\n    render() {\n        return (\n            <Container>\n                <Row>\n                    <Col md=\"12\">\n                        <SubsectionHeader>Choose a Time Block</SubsectionHeader>\n                        {this.state.displayBlocks.map(block => {\n                            return (\n                                <TimeSelectBox selectedBlocks={this.props.formData.blocks} handleBlocksChange={this.props.handleBlocksChange} index={block.index} key={block.index} display={{ start: moment(block.start).format(\"x\"), end: moment(block.end).format(\"x\") }} />\n                            )\n                        })}\n                        \n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n}\n\nexport default TimeSelect;","import React from \"react\"\n\nimport Col from \"react-bootstrap/Col\"\nimport Row from \"react-bootstrap/Row\"\nimport Container from \"react-bootstrap/Container\"\n\nclass SubmitButton extends React.Component {\n    render() {\n        return (\n            <Container>\n                <Row>\n                    <Col><button className=\"btn btn-danger submit-button\" type=\"button\" onClick={this.props.handleSubmit} style={{marginTop: \"10px\", marginLeft: 0}}>Reserve</button></Col>\n                </Row>\n            </Container>\n        )\n    }\n}\nexport default SubmitButton","import React from \"react\"\n\nclass DateSelectBox extends React.Component {\n    render() {\n        return (\n            <div style={this.props.selectedDate == this.props.day.raw ? {border: \"1px solid black\"} : {}} onClick={() => this.props.handleDateChange(this.props.day.raw)} className=\"selection-box time-selection\">\n                <span className=\"selection-box-text\">{this.props.day.date}</span>\n            </div>\n        )\n    }\n}\n\nexport default DateSelectBox;","import React from \"react\"\nimport DateSelectBox from \"./DateSelectBox\"\nimport moment from \"moment\"\nimport axios from \"axios\"\n\nimport Col from \"react-bootstrap/Col\"\nimport Row from \"react-bootstrap/Row\"\nimport Container from \"react-bootstrap/Container\"\n\nimport SubsectionHeader from \"../general/SubsectionHeader\"\n\nclass DateSelect extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            days: []\n        }\n    }\n    getData = () => {\n        axios.get(\"/blocks/days/view\").then(res => {\n            this.setState({\n                days: res.data\n            })\n        }).catch(err => {\n            if (err.response.status == 401) {\n                this.props.handle401();\n            }\n        })\n    }\n    componentDidMount() {\n        this.getData();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.isLoggedIn != this.props.isLoggedIn) {\n            this.getData();\n        }\n    }\n    render() {\n        return (\n            <Container>\n                <Row>\n                    <Col md=\"12\">\n                        <SubsectionHeader>Choose a Date</SubsectionHeader>\n                        {this.state.days.map(day => {\n                            return (<DateSelectBox selectedDate={this.props.selectedDate} handleDateChange={this.props.handleDateChange} key={day} day={{ date: moment(day, \"MM/DD/YYYY\").format(\"MMM Do YY\"), raw: day}} />)\n                        })}\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n}\n\nexport default DateSelect;","import React from \"react\"\nimport BasicInfo from \"./BasicInfo/BasicInfo\"\nimport TimeSelect from \"./TimeSelect/TimeSelect\"\nimport SubmitButton from \"./general/SubmitButton\"\nimport DateSelect from \"./DateSelect/DateSelect\"\nimport axios from \"axios\"\nimport {Redirect} from \"react-router-dom\";\n\nclass MainContent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            machine: null,\n            blocks: [],\n            date: null,\n            justification: null,\n            isLoading: false,\n            isLoggedIn: true, // Starts out as true to make the dialogue nicer\n            isLoggedIn: true,\n            email: \"\",\n            password: \"\",\n            passwordIncorrect: false,\n            modal: null\n        }\n        this.handleMachineChange = this.handleMachineChange.bind(this);\n        this.handleBlocksChange = this.handleBlocksChange.bind(this);\n        this.handleDateChange = this.handleDateChange.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    handleSubmit() {\n        // Validate\n        if (this.state.machine == null || this.state.blocks.length == 0 || this.state.date == null || this.state.justification == null) {\n            this.props.changeModal(\"ValidationError\");\n            return;\n        }\n        // Submit\n        this.props.changeModal(\"Submitting\");\n        axios({\n            method: 'post',\n            url: '/res/new',\n            data: {\n                machine: this.state.machine,\n                blocks: this.state.blocks,\n                date: this.state.date,\n                description: this.state.justification\n            }\n        }).then(res => {\n            /**\n             * Redirect the user to the\n             * confirmation page.\n             */\n            this.props.closeModal()\n            this.props.route(\"/confirmation\")\n        }).catch(err => {\n            /* \n             * The error is most likely because there was a conflict.\n             * There is most likely a conflict.\n             * Note that conflicts should never occur as it should not even\n             * be possible to make a conflcting reservation.\n             */\n            this.props.changeModal(\"ErrorMsg\",\"An error occured. Your reservation could not be completed. Please try again later or consult the help documentation.\")\n        });\n    }\n    handleChange(ev) {\n        // Change the state based on the justificaton\n        // console.log(\"justification set to: \" + text)\n        console.log(\"clicked!\")\n        console.log(ev);\n        this.setState({\n            ...this.state,\n            justification: ev.target.value\n        })\n    }\n    handleMachineChange(_id) {\n        this.setState({\n            ...this.state,\n            machine: _id\n        })\n        console.log(this.state.machine)\n        // console.log(_id);\n    }\n    /**\n     * Handles updating the time slots. Note that it must also check to\n     * make sure that time slots are sequential. Time slots must be consecutive,\n     * with one taking place after the other.\n     */\n    handleBlocksChange(index) {\n        let blocks = this.state.blocks;\n        if (blocks === null) {\n            blocks = [];\n        }\n        if (blocks.includes(index)) { // Toggle the selected index from selected to unselected\n            for (let i = 0; i < blocks.length; i++) { // Removes the target index in O(n) time\n                let val = blocks[i];\n                if (val === index) {\n                    // We have found the value\n                    // Note that the following exsists ensure that\n                    // the proper behaviour is observed. What is desired is that all blocks\n                    // to the right should be removed if the first time slot is selected.\n                    if (i === 0) {\n                        blocks.shift();\n                    } else {\n                        blocks.splice(i, blocks.length); // Delete everything in the array from that point onwards\n                    }\n                }\n            }\n        } else { // Add the block to the array\n            if (blocks.length != 0) { // NaN will be produced if there is less than 3 elements\n                // Determine what are the maximum and minimum indices that should be removed\n                // Note that these are possible because the array of time slots is sorted from least to greatest\n                let upperBound = blocks[blocks.length - 1] + 1;\n                let lowerBound = blocks[0] - 1;\n                if (lowerBound < 0) {\n                    lowerBound = 0;\n                };\n                // Compare the requested value to the upper and lower bounds \n                if (index === upperBound || index === lowerBound) {\n                    blocks.push(index);\n                    blocks.sort((a, b) => { return a - b }); // The indices must always be sorted from least to greatest\n                }\n            } else {\n                blocks.push(index);\n            }\n            \n        }\n        this.setState({\n            ...this.state,\n            blocks: blocks\n        })\n        console.log(this.state.blocks);\n    }\n    handleDateChange(date) {\n        // The selected date is in mm/dd/yyyy\n        this.setState({\n            ...this.state,\n            date: date\n        })\n    }\n    handle401 = () => {\n        this.props.route(\"/login\")\n    }\n    handle500 = () => {\n        this.props.route(\"/servererror\");\n    }\n    render() {\n        return (<div>\n            {/* Redirect route */}\n            <Redirect to={{\n                pathname: this.props.redirect,\n                state: {\n                    machine: this.state.machine,\n                    date: this.state.date,\n                    blocks: this.state.blocks,\n                    justification: this.state.justification\n                }\n            }} />\n            {/* <Loading isLoading={this.state.isLoading} /> */}\n            <BasicInfo handle500={this.handle500} changeModal={this.props.changeModal} handle401={this.handle401} isLoggedIn={this.state.isLoggedIn} handleChange={this.handleChange} justification={this.props.justification} selectedMachine={this.state.machine} handleMachineChange={this.handleMachineChange} />\n            <DateSelect handle401={this.handle401} isLoggedIn={this.state.isLoggedIn} selectedDate={this.state.date} handleDateChange={this.handleDateChange} />\n            <TimeSelect handle401={this.handle401} isLoggedIn={this.state.isLoggedIn} handleBlocksChange={this.handleBlocksChange} formData={this.state} />\n            <SubmitButton handleSubmit={this.handleSubmit} />\n        </div>)\n    }\n}\n\nexport default MainContent;","import React from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport \"./bootstrap/css/bootstrap.min.css\"\nimport \"./css/app-styles.css\"\nimport \"./css/box-styles.css\"\nimport \"./fonts/font-awesome.min.css\"\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport { CookiesProvider } from 'react-cookie';\nimport { withCookies } from 'react-cookie';\nimport axios from \"axios\"\nimport ModalController from \"./components/ModalController\"\n\nimport Confirmation from \"./components/Confirmation\" \nimport Login from \"./components/authentication/Login\"\nimport ServerErrror from \"./components/ServerError\"\n\n// Import Componnents\n\nimport Nav from './components/Nav'\nimport MainContent from \"./components/MainContent\"\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: null,\n      modalText: \"\",\n      redirect: \"/\" // Defines where the app should start\n    }\n  }\n  logoutClicked = () => {\n    this.changeModal(\"LogoutConfirmation\")\n  }\n  handleLogout = () => {\n    this.changeModal(\"LoggingOut\")\n    axios({\n      method: \"post\",\n      url: \"/auth/logout\"\n    }).then(res => {\n      this.closeModal();\n      this.route(\"/login\");\n    }).catch(err => {\n      // An eccor occured.\n      this.changeModal(\"ErrorMsg\",\"An unexpected error occured and we were unable to log you out\")\n    })\n  }\n  closeModal = () => {\n    this.setState({\n      modal: null\n    })\n  }\n  changeModal = (newModal, text) => {\n    this.setState({\n      modal: newModal,\n      modalText: text\n    });\n  }\n  route = (to) => {\n    this.setState({\n      redirect: to\n    })\n  }\n  render() {\n    return (\n      <CookiesProvider>\n        <Router>\n          <Nav logoutClicked={this.logoutClicked} />\n          <ModalController modalText={this.state.modalText} handleLogout={this.handleLogout} changeModal={this.changeModal} closeModal={this.closeModal} modal={this.state.modal} />\n          <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Montserrat:400,700\" />\n          <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Lato:400,700,400italic,700italic\" />\n          <Switch>\n            <Route path=\"/confirmation\">\n              <Confirmation route={this.route} redirect={this.state.redirect} />\n            </Route>\n            <Route path=\"/login\">\n              <Login route={this.route} redirect={this.state.redirect} closeModal={this.closeModal} changeModal={this.changeModal} />\n            </Route>\n            <Route path=\"/servererror\">\n              <ServerErrror route={this.route} redirect={this.state.redirect} />\n            </Route>\n            <Route path=\"/\" render={() => (<MainContent route={this.route} redirect={this.state.redirect} changeModal={this.changeModal} closeModal={this.closeModal} getReservationConfirmation={this.getReservationConfirmation} cookies={this.props.cookies} />)} />\n          </Switch>\n        </Router>\n      </CookiesProvider>\n    );\n  }\n}\n\nexport default withCookies(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}